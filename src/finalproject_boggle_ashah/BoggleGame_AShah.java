/*
 Angel Shah
August 20,2018
ICS4UE
Mr.Jeg
Culminationg Project: Boggle Game- this application is a digital version of the popular word game Boggle. Player has 3 mins to make as many words possible from the 16 ramdomly 
generated letters all while folllowing the game rules.
 */
package finalproject_boggle_ashah;
import java.io.BufferedReader;// import for the buffer reader
import java.io.FileReader;//file reader import
import java.util.Timer;/// timer class import
import java.util.ArrayList;// array list import
import java.util.TimerTask;// import for timer task
import javax.swing.JOptionPane;// import fr the JOption pane which is use many times to display pop-up messages to the user

/**
 *
 * @author angel
 */
public class BoggleGame_AShah extends javax.swing.JFrame {

    
   
    
    int intCurrentScore=0,intHighScore=0;// global variables for current score and high score initialized
    
     char[] randCharArr= new char[16];// global char array for all the randomly generated letters
     
     JOptionPane alert = new JOptionPane("Alert");// option pane for pop up messages/alerts to the player for invalid moves, wrong words, and for when time is up
     
     int intLastBtn=0;// global last button variable to make sure the user pucks only adjacent or diaginal letters
     
     ArrayList <String> selectLetterArr= new ArrayList <String>();// global arraylist for the word the user is making
     
     ArrayList <String> correctWordArr = new ArrayList <String>();// global arraylist for the correct words guessed by the player
     
    
    int intMin= 2;//global var for timer minute
        int intSec=60;// global var for timer seconds
      
        boolean isWord;// isWord var for checking id the user entered word exists
        
       

         String strEnteredWord="";// global var for user's entered word is created
        wordChecker validator = new wordChecker();// wordChecker class initialized
        
        scoreKeeper score;// global var for user's current score
        
        Timer timer =new Timer();// timer object created
      
       
     
    /**
     * Creates new form BoggleGame_AShah
     */
    public BoggleGame_AShah() {
        initComponents();
        // starts off with all buttons disabled until the user clicks play
        buttonDisablerMethod();
        
        btnPlayAgain.setEnabled(false);// play again button set disabled seperately 
         
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelSplash = new javax.swing.JPanel();
        btnNext = new javax.swing.JButton();
        lblCreatedby = new javax.swing.JLabel();
        lblDigiVersion = new javax.swing.JLabel();
        lblLogo = new javax.swing.JLabel();
        panelMainMenu = new javax.swing.JPanel();
        lblMainMenu = new javax.swing.JLabel();
        lblWhatUWannaDo = new javax.swing.JLabel();
        btnPlayGame = new javax.swing.JButton();
        btnGameRules = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        panelExit = new javax.swing.JPanel();
        lblThanksMessage = new javax.swing.JLabel();
        btnExitFinal = new javax.swing.JButton();
        panelGameRules = new javax.swing.JPanel();
        lblGameRules = new javax.swing.JLabel();
        lblWhatUWannaDo1 = new javax.swing.JLabel();
        lblWhatUWannaDo2 = new javax.swing.JLabel();
        lblExample = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        panelPlayGame = new javax.swing.JPanel();
        btn1 = new javax.swing.JButton();
        lblInstruct = new javax.swing.JLabel();
        btnPlay = new javax.swing.JButton();
        lblCurrentWord = new javax.swing.JLabel();
        btnSubmitWord = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn10 = new javax.swing.JButton();
        btn11 = new javax.swing.JButton();
        btn12 = new javax.swing.JButton();
        btn13 = new javax.swing.JButton();
        btn14 = new javax.swing.JButton();
        btn15 = new javax.swing.JButton();
        btn16 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaCurrentWord = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaGuessedWords = new javax.swing.JTextArea();
        lblCorrectGiess = new javax.swing.JLabel();
        lblMin = new javax.swing.JLabel();
        lblColon = new javax.swing.JLabel();
        lblSec = new javax.swing.JLabel();
        btnPlayAgain = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnEndGame = new javax.swing.JButton();
        btnMainMenu = new javax.swing.JButton();
        btnExit2 = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        lblHighScore = new javax.swing.JLabel();
        lblCurrentScore = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        panelSplash.setBackground(new java.awt.Color(255, 92, 92));
        panelSplash.setPreferredSize(new java.awt.Dimension(889, 500));

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        lblCreatedby.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblCreatedby.setForeground(new java.awt.Color(255, 255, 255));
        lblCreatedby.setText("Created By: Angel Shah");

        lblDigiVersion.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblDigiVersion.setForeground(new java.awt.Color(255, 255, 255));
        lblDigiVersion.setText("Digital Version");

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/finalproject_boggle_ashah/bogglelogo.jpg.png"))); // NOI18N

        javax.swing.GroupLayout panelSplashLayout = new javax.swing.GroupLayout(panelSplash);
        panelSplash.setLayout(panelSplashLayout);
        panelSplashLayout.setHorizontalGroup(
            panelSplashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSplashLayout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addGroup(panelSplashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLogo)
                    .addGroup(panelSplashLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(lblCreatedby, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelSplashLayout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(lblDigiVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(266, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSplashLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(403, 403, 403))
        );
        panelSplashLayout.setVerticalGroup(
            panelSplashLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSplashLayout.createSequentialGroup()
                .addContainerGap(126, Short.MAX_VALUE)
                .addComponent(lblLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDigiVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblCreatedby)
                .addGap(61, 61, 61)
                .addComponent(btnNext)
                .addGap(42, 42, 42))
        );

        getContentPane().add(panelSplash, "card2");

        panelMainMenu.setBackground(new java.awt.Color(255, 92, 92));

        lblMainMenu.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        lblMainMenu.setForeground(new java.awt.Color(255, 255, 255));
        lblMainMenu.setText("<html><u>Main Menu");

        lblWhatUWannaDo.setBackground(new java.awt.Color(255, 255, 255));
        lblWhatUWannaDo.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblWhatUWannaDo.setText("What would you like to do?");

        btnPlayGame.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnPlayGame.setText("Play Game!");
        btnPlayGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayGameActionPerformed(evt);
            }
        });

        btnGameRules.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnGameRules.setText("See Game Rules");
        btnGameRules.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGameRulesActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMainMenuLayout = new javax.swing.GroupLayout(panelMainMenu);
        panelMainMenu.setLayout(panelMainMenuLayout);
        panelMainMenuLayout.setHorizontalGroup(
            panelMainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainMenuLayout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addGroup(panelMainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelMainMenuLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(lblWhatUWannaDo))
                    .addGroup(panelMainMenuLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(panelMainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGameRules, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPlayGame, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(309, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMainMenuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExit)
                .addGap(52, 52, 52))
        );
        panelMainMenuLayout.setVerticalGroup(
            panelMainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMainMenuLayout.createSequentialGroup()
                .addContainerGap(89, Short.MAX_VALUE)
                .addComponent(lblMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(lblWhatUWannaDo)
                .addGap(50, 50, 50)
                .addComponent(btnGameRules, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnPlayGame, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(btnExit)
                .addGap(24, 24, 24))
        );

        getContentPane().add(panelMainMenu, "card3");

        panelExit.setBackground(new java.awt.Color(255, 92, 92));

        lblThanksMessage.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblThanksMessage.setForeground(new java.awt.Color(255, 255, 255));
        lblThanksMessage.setText("Thank You For Playing This Game!");

        btnExitFinal.setText("Exit");
        btnExitFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitFinalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelExitLayout = new javax.swing.GroupLayout(panelExit);
        panelExit.setLayout(panelExitLayout);
        panelExitLayout.setHorizontalGroup(
            panelExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExitLayout.createSequentialGroup()
                .addGap(331, 331, 331)
                .addComponent(btnExitFinal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelExitLayout.createSequentialGroup()
                .addContainerGap(82, Short.MAX_VALUE)
                .addComponent(lblThanksMessage)
                .addGap(76, 76, 76))
        );
        panelExitLayout.setVerticalGroup(
            panelExitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelExitLayout.createSequentialGroup()
                .addContainerGap(249, Short.MAX_VALUE)
                .addComponent(lblThanksMessage)
                .addGap(51, 51, 51)
                .addComponent(btnExitFinal)
                .addGap(144, 144, 144))
        );

        getContentPane().add(panelExit, "card4");

        panelGameRules.setBackground(new java.awt.Color(255, 92, 92));

        lblGameRules.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        lblGameRules.setForeground(new java.awt.Color(255, 255, 255));
        lblGameRules.setText("<html><u>Game Rules");

        lblWhatUWannaDo1.setBackground(new java.awt.Color(255, 255, 255));
        lblWhatUWannaDo1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblWhatUWannaDo1.setForeground(new java.awt.Color(51, 51, 51));
        lblWhatUWannaDo1.setText("<html><p style=\"text-align:justify\"><u>Rules:</u><br>- The letters must be adjoining in a 'chain'. (Letter cubes in the chain may be adjacent horizontally, vertically, or diagonally.)<br>-  Words must contain at least three letters.<br>- No letter cube may be used more than once within a single word.");

        lblWhatUWannaDo2.setBackground(new java.awt.Color(255, 255, 255));
        lblWhatUWannaDo2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblWhatUWannaDo2.setText("<html><p style=\"text-align:center\"> Task: The program will generate 16 random letters, your task is to find as many words as you can in 3 minutes!   ");

        lblExample.setIcon(new javax.swing.ImageIcon(getClass().getResource("/finalproject_boggle_ashah/example.gif"))); // NOI18N

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelGameRulesLayout = new javax.swing.GroupLayout(panelGameRules);
        panelGameRules.setLayout(panelGameRulesLayout);
        panelGameRulesLayout.setHorizontalGroup(
            panelGameRulesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGameRulesLayout.createSequentialGroup()
                .addGap(290, 290, 290)
                .addComponent(lblGameRules, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(317, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGameRulesLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(panelGameRulesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWhatUWannaDo2, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelGameRulesLayout.createSequentialGroup()
                        .addComponent(lblWhatUWannaDo1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(lblExample)))
                .addGap(50, 50, 50))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGameRulesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(77, 77, 77))
        );
        panelGameRulesLayout.setVerticalGroup(
            panelGameRulesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGameRulesLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(lblGameRules, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(lblWhatUWannaDo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(panelGameRulesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGameRulesLayout.createSequentialGroup()
                        .addComponent(lblWhatUWannaDo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(btnBack)
                        .addGap(24, 24, 24))
                    .addGroup(panelGameRulesLayout.createSequentialGroup()
                        .addComponent(lblExample, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        getContentPane().add(panelGameRules, "card5");

        panelPlayGame.setBackground(new java.awt.Color(255, 92, 92));

        btn1.setBackground(new java.awt.Color(255, 255, 153));
        btn1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        lblInstruct.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblInstruct.setText("Click 'Play' to begin your game!");

        btnPlay.setText("Play");
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });

        lblCurrentWord.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblCurrentWord.setText("Your Current Word:");

        btnSubmitWord.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSubmitWord.setText("Submit Word");
        btnSubmitWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitWordActionPerformed(evt);
            }
        });

        btn2.setBackground(new java.awt.Color(255, 255, 153));
        btn2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setBackground(new java.awt.Color(255, 255, 153));
        btn3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setBackground(new java.awt.Color(255, 255, 153));
        btn4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setBackground(new java.awt.Color(255, 255, 153));
        btn5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setBackground(new java.awt.Color(255, 255, 153));
        btn6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn7.setBackground(new java.awt.Color(255, 255, 153));
        btn7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setBackground(new java.awt.Color(255, 255, 153));
        btn8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setBackground(new java.awt.Color(255, 255, 153));
        btn9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn10.setBackground(new java.awt.Color(255, 255, 153));
        btn10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn10ActionPerformed(evt);
            }
        });

        btn11.setBackground(new java.awt.Color(255, 255, 153));
        btn11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn11ActionPerformed(evt);
            }
        });

        btn12.setBackground(new java.awt.Color(255, 255, 153));
        btn12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn12ActionPerformed(evt);
            }
        });

        btn13.setBackground(new java.awt.Color(255, 255, 153));
        btn13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn13ActionPerformed(evt);
            }
        });

        btn14.setBackground(new java.awt.Color(255, 255, 153));
        btn14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn14ActionPerformed(evt);
            }
        });

        btn15.setBackground(new java.awt.Color(255, 255, 153));
        btn15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn15ActionPerformed(evt);
            }
        });

        btn16.setBackground(new java.awt.Color(255, 255, 153));
        btn16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btn16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn16ActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtAreaCurrentWord.setColumns(20);
        txtAreaCurrentWord.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txtAreaCurrentWord.setRows(5);
        jScrollPane1.setViewportView(txtAreaCurrentWord);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtAreaGuessedWords.setColumns(20);
        txtAreaGuessedWords.setRows(5);
        jScrollPane2.setViewportView(txtAreaGuessedWords);

        lblCorrectGiess.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblCorrectGiess.setText("Correctly Guessed Words:");

        lblMin.setFont(new java.awt.Font("Arial", 1, 28)); // NOI18N
        lblMin.setForeground(new java.awt.Color(255, 255, 0));
        lblMin.setText("03");

        lblColon.setFont(new java.awt.Font("Arial", 1, 28)); // NOI18N
        lblColon.setForeground(new java.awt.Color(255, 255, 0));
        lblColon.setText(":");

        lblSec.setFont(new java.awt.Font("Arial", 1, 28)); // NOI18N
        lblSec.setForeground(new java.awt.Color(255, 255, 0));
        lblSec.setText("00");

        btnPlayAgain.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPlayAgain.setText("Play Again");
        btnPlayAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayAgainActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("Timer:");

        btnEndGame.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEndGame.setText("End Game");
        btnEndGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEndGameActionPerformed(evt);
            }
        });

        btnMainMenu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnMainMenu.setText("Main Menu");
        btnMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainMenuActionPerformed(evt);
            }
        });

        btnExit2.setText("Exit");
        btnExit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExit2ActionPerformed(evt);
            }
        });

        btnClear.setText("clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        lblHighScore.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblHighScore.setText("Your High Score:");

        lblCurrentScore.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lblCurrentScore.setText("Your Current Score:");

        jLabel2.setText("Click on the letter buttons in the grid to type word.");

        javax.swing.GroupLayout panelPlayGameLayout = new javax.swing.GroupLayout(panelPlayGame);
        panelPlayGame.setLayout(panelPlayGameLayout);
        panelPlayGameLayout.setHorizontalGroup(
            panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPlayGameLayout.createSequentialGroup()
                .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPlayGameLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPlayGameLayout.createSequentialGroup()
                                .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelPlayGameLayout.createSequentialGroup()
                                        .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelPlayGameLayout.createSequentialGroup()
                                        .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelPlayGameLayout.createSequentialGroup()
                                        .addComponent(btn13, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn14, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelPlayGameLayout.createSequentialGroup()
                                        .addComponent(btn15, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn16, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelPlayGameLayout.createSequentialGroup()
                                        .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelPlayGameLayout.createSequentialGroup()
                                        .addComponent(btn11, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn12, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(panelPlayGameLayout.createSequentialGroup()
                                .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelPlayGameLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblInstruct)
                            .addGroup(panelPlayGameLayout.createSequentialGroup()
                                .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)))))
                .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPlayGameLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelPlayGameLayout.createSequentialGroup()
                                .addComponent(lblMin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblColon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSec))
                            .addComponent(jLabel1))
                        .addGap(115, 115, 115)
                        .addComponent(lblCorrectGiess)
                        .addGap(61, 61, 61))
                    .addGroup(panelPlayGameLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHighScore)
                            .addComponent(lblCurrentScore))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPlayGameLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPlayGameLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnSubmitWord)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnMainMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPlayAgain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEndGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnExit2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(80, 80, 80))
                    .addGroup(panelPlayGameLayout.createSequentialGroup()
                        .addComponent(lblCurrentWord)
                        .addGap(52, 52, 52)
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );
        panelPlayGameLayout.setVerticalGroup(
            panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPlayGameLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblInstruct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPlayGameLayout.createSequentialGroup()
                        .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPlayGameLayout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMin)
                                    .addComponent(lblColon)
                                    .addComponent(lblSec)))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEndGame, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPlayAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnMainMenu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExit2)
                        .addGap(22, 22, 22)
                        .addComponent(lblCurrentScore)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(panelPlayGameLayout.createSequentialGroup()
                        .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn11, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn12, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn13, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn14, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn15, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn16, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)))
                .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHighScore)
                    .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCurrentWord)
                        .addComponent(btnClear)))
                .addGap(24, 24, 24)
                .addGroup(panelPlayGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubmitWord, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPlayGameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCorrectGiess)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        getContentPane().add(panelPlayGame, "card6");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
       panelSplash.setVisible(false);// sets the splash panel to invisible
       panelMainMenu.setVisible(true);//sets the main menu palen to visible
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
      
        panelMainMenu.setVisible(false);// sets the main menu panel to invisible
        panelExit.setVisible(true);// sets the exit panel visible
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnExitFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitFinalActionPerformed
       System.exit(0);// exits the program and closes jframe window when exit is clicked
    }//GEN-LAST:event_btnExitFinalActionPerformed

    private void btnGameRulesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGameRulesActionPerformed
        panelMainMenu.setVisible(false);// sets main menu panel to invisible
        panelGameRules.setVisible(true);// sets the game rules panel visible
    }//GEN-LAST:event_btnGameRulesActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
       panelGameRules.setVisible(false);// sets the game rules panel invisible
       panelMainMenu.setVisible(true);// sets main menu panel to visible
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnPlayGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayGameActionPerformed
         panelMainMenu.setVisible(false);// sets main menu panel to invisible
         panelPlayGame.setVisible(true);//sets the play game panel to visible
    }//GEN-LAST:event_btnPlayGameActionPerformed

    private void btnSubmitWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitWordActionPerformed
 
         
        intLastBtn=0;// sets the lastButton var back to 0
        txtAreaGuessedWords.setText("");
        
for(int i=0; i<selectLetterArr.size();i++){// reads the letters in the user select array and joins them to geter to create a word which it stores in the strEnteredWord String.
    strEnteredWord+=selectLetterArr.get(i);
}



if(strEnteredWord.length()<3){// checks if the word is atleast 3 letters long
    JOptionPane.showMessageDialog(null, "Word must be atleast 3 letters long!");// if its not an error message is shown
    buttonEnablerMethod();//all disabled buttons are enabled
    intLastBtn=0; // last butn is set back to zero so that user can select any word now
    
}
if(!correctWordArr.isEmpty()){//checks if the string is empty, id=f not, then continues
    
if(isWordAlreadyEntered(strEnteredWord, correctWordArr.size())){// checks if the word has been previously entered
        correctWordArr.remove(strEnteredWord);//removes the word from the correct word array
        JOptionPane.showMessageDialog(null, "You have already guessed this word!");// displays error message
       
        int intWordLength= strEnteredWord.length();//removes the points that were added from that repeated word
        switch (intWordLength){
           case 3: 
               intCurrentScore--;
               break;
           case 4:
               intCurrentScore--;
               break;
           case 5:
               intCurrentScore-=2;
               break;
           case 6:
               intCurrentScore-=3;
               break;
           case 7:
               intCurrentScore-=4;
               break;
       }
       if(intWordLength>=8){
           intCurrentScore-=11;
       }
    }

}




  if(isValidWord(strEnteredWord)){// checks if a valid word was inputted
        
        
        correctWordArr.add(strEnteredWord);// adds word to the correct word arraylist
        
        
        
       int intWordLength= strEnteredWord.length();//gets the length of the array
       
       switch (intWordLength){// uses switch statement to assing points accoring to the length of the word
           case 3: 
               intCurrentScore++;
               break;
           case 4:
               intCurrentScore++;
               break;
           case 5:
               intCurrentScore+=2;
               break;
           case 6:
               intCurrentScore+=3;
               break;
           case 7:
               intCurrentScore+=4;
               break;
       }
       if(intWordLength>=8){
           intCurrentScore+=11;
       }
         
    }
    else if(!isValidWord(strEnteredWord)){// checks if it is not a valid word
        JOptionPane.showMessageDialog(null, "That word does not exist!");// displays error message
    buttonEnablerMethod();// enables all buttons
    }
   
    
    lblCurrentScore.setText("Your Current Score: "+intCurrentScore); // display the user's current score   
   buttonEnablerMethod();
   txtAreaCurrentWord.setText("");
    for(int i=0; i< correctWordArr.size();i++){//display the user's correctly guessed words 
        txtAreaGuessedWords.append(correctWordArr.get(i)+"\n");
    }
    
    selectLetterArr.clear();// clears the letter selection arraylist
     strEnteredWord="";//sets the current word display blank
     
    }//GEN-LAST:event_btnSubmitWordActionPerformed
  
    
    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed
       // diables the play button
        btnPlay.setEnabled(false);
        
        // enables all other buttons
     buttonEnablerMethod();
      
     timerMethod();//initiates timer method

        startPlay();// calls the startPlay method to assign all the random letters to the grid buttons
    }//GEN-LAST:event_btnPlayActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed

        txtAreaCurrentWord.setText("");// stes the current word display blank
        
        if (intLastBtn==0|| intLastBtn==2||intLastBtn==5||intLastBtn==6){// checks f the last button pressed is one that is adjacent of diagona;
            intLastBtn=1;
            selectLetterArr.add(btn1.getText());//adds the letter of the button to the selsected letters arraylist
            btn1.setEnabled(false);//disables the button so it can't be used again
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));//adds the letter to the current word display
            }

        }else{
             invalidInputMethod();//displays an errr
        }
// THIS IS THE SAME FOR ALL OTHER BTN1-BTN16 ACTION METHODS AND SO COMMENTS WILL NOT WRITTEN FOR THEM
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
       
         txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==1||intLastBtn==3||intLastBtn==5||intLastBtn==6||intLastBtn==7){
            intLastBtn=2;
            selectLetterArr.add(btn2.getText());
             btn2.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==2||intLastBtn==4 ||intLastBtn==6||intLastBtn==7|| intLastBtn==8){
            intLastBtn=3;
            selectLetterArr.add(btn3.getText());
             btn3.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
            txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==3||intLastBtn==7|| intLastBtn==8){
            intLastBtn=4;
            selectLetterArr.add(btn4.getText());
             btn4.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
          txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==1||intLastBtn==2 ||intLastBtn==6||intLastBtn==9|| intLastBtn==10){
            intLastBtn=5;
            selectLetterArr.add(btn5.getText());
             btn5.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
          txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==1||intLastBtn==2 ||intLastBtn==3||intLastBtn==5|| intLastBtn==7|| intLastBtn==9|| intLastBtn==10|| intLastBtn==11){
            intLastBtn=6;
            selectLetterArr.add(btn6.getText());
             btn6.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
       txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==2||intLastBtn==3 ||intLastBtn==4||intLastBtn==6|| intLastBtn==8|| intLastBtn==10|| intLastBtn==11|| intLastBtn==12){
            intLastBtn=7;
            selectLetterArr.add(btn7.getText());
             btn7.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
       txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==3||intLastBtn==4 ||intLastBtn==7||intLastBtn==11 || intLastBtn==12){
            intLastBtn=8;
            selectLetterArr.add(btn8.getText());
             btn8.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==5||intLastBtn==6 ||intLastBtn==10 ||intLastBtn==13 || intLastBtn==14){
            intLastBtn=9;
            selectLetterArr.add(btn9.getText());
             btn9.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn9ActionPerformed

    private void btn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn10ActionPerformed
          txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==5||intLastBtn==6 ||intLastBtn==7||intLastBtn==9|| intLastBtn==11|| intLastBtn==13|| intLastBtn==14|| intLastBtn==15){
            intLastBtn=10;
            selectLetterArr.add(btn10.getText());
             btn10.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn10ActionPerformed

    private void btn11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn11ActionPerformed
        txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==6||intLastBtn==7 ||intLastBtn==8||intLastBtn==10|| intLastBtn==12|| intLastBtn==14|| intLastBtn==15|| intLastBtn==16){
            intLastBtn=11;
            selectLetterArr.add(btn11.getText());
             btn11.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn11ActionPerformed

    private void btn12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn12ActionPerformed
        txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==7||intLastBtn==8 ||intLastBtn==11||intLastBtn==15|| intLastBtn==16){
            intLastBtn=12;
            selectLetterArr.add(btn12.getText());
             btn12.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn12ActionPerformed

    private void btn13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn13ActionPerformed
        txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==9||intLastBtn==10|| intLastBtn==14){
            intLastBtn=13;
            selectLetterArr.add(btn13.getText());
             btn13.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn13ActionPerformed

    private void btn14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn14ActionPerformed
         txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==9||intLastBtn==10 ||intLastBtn==11 ||intLastBtn==13 || intLastBtn==15){
            intLastBtn=14;
            selectLetterArr.add(btn14.getText());
             btn14.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn14ActionPerformed

    private void btn15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn15ActionPerformed
 txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==10||intLastBtn==11 ||intLastBtn==12 ||intLastBtn==14 || intLastBtn==16){
            intLastBtn=15;
            selectLetterArr.add(btn15.getText());
             btn15.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn15ActionPerformed

    private void btn16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn16ActionPerformed
       txtAreaCurrentWord.setText("");
                 
        if (intLastBtn==0|| intLastBtn==11||intLastBtn==12 || intLastBtn==15){
            intLastBtn=16;
            selectLetterArr.add(btn16.getText());
             btn16.setEnabled(false);
            for(int i=0;i<selectLetterArr.size();i++){
                txtAreaCurrentWord.append(selectLetterArr.get(i));
            }

        }else{
           invalidInputMethod();
        }
    }//GEN-LAST:event_btn16ActionPerformed

    
     private void timerMethod(){//timer method which starts timer
             timer =new Timer();//creates new timer obj
        TimerTask task = new TimerTask(){// new timer task created
            @Override
            public void run(){//runs this task
                intSec--;
               
                if(intSec<10){//if seconds are less than 10, a 0 is added before the second
                    lblSec.setText("0"+intSec);//sec displayed
                    
                 if(intSec<0){//if sec goes below 0, it is reset to 60 and min is decreaded by 1
                    intSec=59;
                    intMin--;
                    lblMin.setText("0"+intMin);// displays sec and min
                    lblSec.setText(Integer.toString(intSec));
                }
                 if(intSec==0&&intMin==0){// if bot min and sec are 0, the timer is stopped
                    JOptionPane.showMessageDialog(null,"Time's Up!");// a pop-up says that time's up
                    timer.cancel();
                    timeUpMethod();//runs timeup method
                }
                    
                }
  
                
                else{
                   
                    lblSec.setText(Integer.toString(intSec));//displays sec
                }
                lblMin.setText("0"+Integer.toString(intMin));//displays min
                
                
            }
        };
        timer.scheduleAtFixedRate(task,1000,1000);//initiates the timer
        }
    
    
    private void btnPlayAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayAgainActionPerformed

        intCurrentScore=0;// resests the current score counter
        lblCurrentScore.setText("Your Current Score: "+intCurrentScore);//displays current score
        lblHighScore.setText("Your High Score: "+intHighScore);//display high score
        txtAreaGuessedWords.setText("");// sets the guessed words area blank
        intMin=2;// resets mins
     intSec=60;//resets sec
       timerMethod();//class the timer method to start timer again
     buttonEnablerMethod();// enables all buttons again
     
     startPlay();// generates new 16 random letters for buttons
     
    correctWordArr.clear();// clears the correct word array list
     
     btnPlayAgain.setEnabled(false);// disables play again btn
     
     
      
        
    }//GEN-LAST:event_btnPlayAgainActionPerformed

    private void btnEndGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEndGameActionPerformed
        timer.cancel();// stops timer
        btnPlayAgain.setEnabled(true);// enables play again btn
        btnEndGame.setEnabled(false);// disables end game btn
        lblMin.setText("00");// sets min and sec to 0
        lblSec.setText("00");
        buttonDisablerMethod();// disables all buttons
    }//GEN-LAST:event_btnEndGameActionPerformed

    private void btnMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainMenuActionPerformed
       panelPlayGame.setVisible(false);// turns off play game panel and diaplays main menu panel
        panelMainMenu.setVisible(true);
        timer.cancel();// cancels timer
        lblMin.setText("00");
        lblSec.setText("00");
        intMin=2;//resets min
        intSec=60;//resets sec
        correctWordArr.clear();// clears the correct word array list
        buttonDisablerMethod();//disables all btns
        btnPlay.setEnabled(true);//enables play btn again
        txtAreaGuessedWords.setText("");// erases everything ind guessed orrect textarea
    }//GEN-LAST:event_btnMainMenuActionPerformed

    private void btnExit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExit2ActionPerformed
        panelPlayGame.setVisible(false);//diables the game panel and shows the final exit panel
        panelExit.setVisible(true);
    }//GEN-LAST:event_btnExit2ActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
       selectLetterArr.clear();// clears the arraylist containing the letters selected by user
       txtAreaCurrentWord.setText("");// sets the current word display blank
       intLastBtn=0;// resets last button to 0
       buttonEnablerMethod();// enables all buttons again
    }//GEN-LAST:event_btnClearActionPerformed

    public boolean isWordAlreadyEntered(String strEnteredWord, int intArrLength){// method to check if a word has already been entered
       int intArrIndex= intArrLength-1;// gets index by taking ay=rraylist size and decreasing by 1
        if(intArrIndex==0 && !strEnteredWord.equals(correctWordArr.get(0))){
            return false;//base case that returns false if it is not repeated
        }if(strEnteredWord.equals(correctWordArr.get(intArrIndex))) {
            return true;// if word is found then return true
        }
        else{
            return isWordAlreadyEntered(strEnteredWord, intArrLength-1);//recursion that decreases the index by 1 each time so that all indicies are looked at
        }
        
        
    }
    /**
     * 
     * @param strEnteredWord as a string
     * @return  true if the word exits in the text file, or else false if it doesn't
     */
    public boolean isValidWord(String strEnteredWord){// checks if the word entered exists
         
        try{
        FileReader fr= new FileReader("wordlist.xml");//file reader for the txt file contain the english words
        BufferedReader br = new BufferedReader(fr);// buffered reader reads the txt file
        
        String word = br.readLine();// the word is set to the line the bufferedreader reads
        
        while( !word.equals(strEnteredWord)){//runs while the word is not found
            word=br.readLine();// continues to read line by line
            if(word.equals(strEnteredWord)){//checks if the word enterd by player the line read
             
                  
                   return true;// if word is found returns true
            }
            
            
        }
 return false;// if not found returns false
           } catch (Exception e){
        
    }  
          return false;// if not found returns false
       
    
    }
    
    public void startPlay(){// start play method
    
   
    // gives each button a random letter from a-z
     for(int i=0;i<16;i++){
           // adds random letters from a-z to the char array
         randCharArr[i]=(char) Math.floor(Math.random()*(122-97+1)+97);
        }
     // assigns the text of each button in the 4x4 grid a random letter from the randCharArr char array
     btn1.setText(Character.toString(randCharArr[0]));
     btn2.setText(Character.toString(randCharArr[1]));
     btn3.setText(Character.toString(randCharArr[2]));
     btn4.setText(Character.toString(randCharArr[3]));
     btn5.setText(Character.toString(randCharArr[4])); 
     btn6.setText(Character.toString(randCharArr[5]));
     btn7.setText(Character.toString(randCharArr[6]));
     btn8.setText(Character.toString(randCharArr[7]));
     btn9.setText(Character.toString(randCharArr[8]));
     btn10.setText(Character.toString(randCharArr[9]));
     btn11.setText(Character.toString(randCharArr[10]));
     btn12.setText(Character.toString(randCharArr[11]));
     btn13.setText(Character.toString(randCharArr[12]));
     btn14.setText(Character.toString(randCharArr[13]));
     btn15.setText(Character.toString(randCharArr[14]));
     btn16.setText(Character.toString(randCharArr[15]));
     
     
}

public void invalidInputMethod(){
    // displays an invalid input message that tells the user they have made invalid input
     JOptionPane.showMessageDialog(null, "<html><p style=\"text-align:center\">Invalid input! <br> Only select letters that are adjacent or diagonal!<br> Same letter button cannot be picked again!");
    
     // clears whatever letters the user has entered    to the letter arraylist   
     selectLetterArr.clear();
              
             // resets intLastBtn value back to 0
             intLastBtn=0;
              // resets all the buttons to enabled
              btn1.setEnabled(true);
              btn2.setEnabled(true);
              btn3.setEnabled(true);
              btn4.setEnabled(true);
              btn5.setEnabled(true);
              btn6.setEnabled(true);
              btn7.setEnabled(true);
              btn8.setEnabled(true);
              btn9.setEnabled(true);
              btn10.setEnabled(true);
              btn11.setEnabled(true);
              btn12.setEnabled(true);
              btn13.setEnabled(true);
              btn14.setEnabled(true);
              btn15.setEnabled(true);
              btn16.setEnabled(true);
              
}

public void buttonEnablerMethod(){
    // enables all of the following buttons
     btn1.setEnabled(true);
        btn2.setEnabled(true);
        btn3.setEnabled(true);
        btn4.setEnabled(true);
        btn5.setEnabled(true);
        btn6.setEnabled(true);
        btn7.setEnabled(true);
        btn8.setEnabled(true);
        btn9.setEnabled(true);
        btn10.setEnabled(true);
        btn11.setEnabled(true);
        btn12.setEnabled(true);
        btn13.setEnabled(true);
        btn14.setEnabled(true);
        btn15.setEnabled(true);
        btn16.setEnabled(true);
        btnSubmitWord.setEnabled(true);
        btnEndGame.setEnabled(true);
        btnClear.setEnabled(true);
}

public void buttonDisablerMethod(){
    //disbales all of the following letters
     btn1.setEnabled(false);
        btn2.setEnabled(false);
        btn3.setEnabled(false);
        btn4.setEnabled(false);
        btn5.setEnabled(false);
        btn6.setEnabled(false);
        btn7.setEnabled(false);
        btn8.setEnabled(false);
        btn9.setEnabled(false);
        btn10.setEnabled(false);
        btn11.setEnabled(false);
        btn12.setEnabled(false);
        btn13.setEnabled(false);
        btn14.setEnabled(false);
        btn15.setEnabled(false);
        btn16.setEnabled(false);
        btnSubmitWord.setEnabled(false);
        btnEndGame.setEnabled(false);
        btnClear.setEnabled(false);
        
}
public void timeUpMethod(){
    buttonDisablerMethod();
    //resets the timer look on the jframe
    lblMin.setText("03");
    lblSec.setText("00");
    if(intCurrentScore>intHighScore){// checks if new high score has been made
        intHighScore=intCurrentScore;
         JOptionPane.showMessageDialog(null,"<html>CONGRATULATIONS!<br> Your have a new High Score!");// display a congrats message if new high score
        lblHighScore.setText("Your High Score: "+intHighScore);
    }
    
    //enables the play again button which the user can click to play the game again
    btnPlayAgain.setEnabled(true);
}




    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BoggleGame_AShah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BoggleGame_AShah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BoggleGame_AShah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BoggleGame_AShah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new BoggleGame_AShah().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn10;
    private javax.swing.JButton btn11;
    private javax.swing.JButton btn12;
    private javax.swing.JButton btn13;
    private javax.swing.JButton btn14;
    private javax.swing.JButton btn15;
    private javax.swing.JButton btn16;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnEndGame;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnExit2;
    private javax.swing.JButton btnExitFinal;
    private javax.swing.JButton btnGameRules;
    private javax.swing.JButton btnMainMenu;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPlay;
    private javax.swing.JButton btnPlayAgain;
    private javax.swing.JButton btnPlayGame;
    private javax.swing.JButton btnSubmitWord;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblColon;
    private javax.swing.JLabel lblCorrectGiess;
    private javax.swing.JLabel lblCreatedby;
    private javax.swing.JLabel lblCurrentScore;
    private javax.swing.JLabel lblCurrentWord;
    private javax.swing.JLabel lblDigiVersion;
    private javax.swing.JLabel lblExample;
    private javax.swing.JLabel lblGameRules;
    private javax.swing.JLabel lblHighScore;
    private javax.swing.JLabel lblInstruct;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblMainMenu;
    private javax.swing.JLabel lblMin;
    private javax.swing.JLabel lblSec;
    private javax.swing.JLabel lblThanksMessage;
    private javax.swing.JLabel lblWhatUWannaDo;
    private javax.swing.JLabel lblWhatUWannaDo1;
    private javax.swing.JLabel lblWhatUWannaDo2;
    private javax.swing.JPanel panelExit;
    private javax.swing.JPanel panelGameRules;
    private javax.swing.JPanel panelMainMenu;
    private javax.swing.JPanel panelPlayGame;
    private javax.swing.JPanel panelSplash;
    private javax.swing.JTextArea txtAreaCurrentWord;
    private javax.swing.JTextArea txtAreaGuessedWords;
    // End of variables declaration//GEN-END:variables
}
